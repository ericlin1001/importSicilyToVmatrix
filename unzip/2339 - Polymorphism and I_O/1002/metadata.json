{"pid":"18364","title":"format the book list again~","time_limit":"1","memory_limit":"262144","description":"<p>My books want to have different kinds of formats of a booklist. To improve the reuseability of the code, we should use the object-oriated thought.&nbsp;I design the class Book as below:<\/p>\r\n<p>&nbsp;class Book<br \/>\r\n{<br \/>\r\n&nbsp;string name;<br \/>\r\n&nbsp;string code;<br \/>\r\n&nbsp; double cost;<br \/>\r\npublic:<br \/>\r\n&nbsp;Book(string s,string c,double co):name(s),code(c),cost(co){}<br \/>\r\n<br \/>\r\n};<\/p>\r\n<p>Different from last book list format demand. the&nbsp;width for name, code and cost&nbsp;are&nbsp;of the same value: 15.&nbsp;<\/p>\r\n<p>The main function is :<\/p>\r\n<p><br \/>\r\nint main() {<br \/>\r\n&nbsp; &nbsp; int N;<br \/>\r\n&nbsp;&nbsp;&nbsp; string name;<br \/>\r\n&nbsp;&nbsp;&nbsp; string code;<br \/>\r\n&nbsp;&nbsp;&nbsp; double cost;<br \/>\r\n&nbsp;&nbsp;&nbsp; cin &gt;&gt; N;<br \/>\r\n&nbsp;&nbsp;&nbsp; int i = 0;<br \/>\r\n&nbsp;&nbsp;&nbsp; Book *books[N];<br \/>\r\n&nbsp;&nbsp;&nbsp;&nbsp; for(i=0;i&lt;N;i++){<br \/>\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; cin &gt;&gt; name &gt;&gt; code &gt;&gt; cost;<br \/>\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; books[i] = new Book(name, code, cost);<br \/>\r\n&nbsp;&nbsp;&nbsp; }<br \/>\r\n&nbsp;&nbsp;&nbsp; for(i=0;i&lt;N;i++){<br \/>\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; cout &lt;&lt; &quot;-----:&quot; &lt;&lt; *books[i];<br \/>\r\n&nbsp;&nbsp;&nbsp; }<br \/>\r\n&nbsp;&nbsp;&nbsp; for(i=0;i&lt;N;i++){<br \/>\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; cout &lt;&lt; leftform &lt;&lt; *books[i];<br \/>\r\n&nbsp;&nbsp;&nbsp; }<br \/>\r\n&nbsp;&nbsp;&nbsp; for(i=0;i&lt;N;i++){<br \/>\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; cout &lt;&lt; rightform &lt;&lt; *books[i];<br \/>\r\n&nbsp;&nbsp;&nbsp; }<br \/>\r\n<br \/>\r\n}<\/p>\r\n<p>&nbsp;<\/p>","input":"<p>First line is the integer N. following with N lines, and for each line containing the name, code and cost.<\/p>\r\n<p>&nbsp;<\/p>","output":"<p>Refer to the main function and the sample output<\/p>","sample_input":"3\r\nbook1 123456 342.13\r\nbook2 456789 23\r\nbook3 789123 1.2321\r\n","sample_output":"-----:          book1         123456     342.130000\r\n-----:          book2         456789      23.000000\r\n-----:          book3         789123       1.232100\r\nleft :book1          123456         342.13         \r\nleft :book2          456789         23.00          \r\nleft :book3          789123         1.23           \r\nright:          book1         123456         342.13\r\nright:          book2         456789          23.00\r\nright:          book3         789123           1.23\r\n","accepted":"56","submissions":"154","special_judge":"0","has_framework":"1","author":"Lab 9 polymorphic and I\/O","hint":"<p><span style=\"color: rgb(255, 0, 0);\"><span style=\"font-size: large;\"><strong>default &lt;&lt; should also set out.setf(ios::showpoint);&nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; out&lt;&lt;setiosflags(ios::fixed);<\/strong><\/span><\/span><\/p>\r\n<p>Different from last book list format demand. the width for name, code and cost are of the same value: 15.<\/p>\r\n<p>Designing your own manipulators.<\/p>","avail":"1","cid":"2339","rate_tot":"0","rate_count":"0","dataversion":"0","stdsid":"0"}