{"pid":"17894","title":"Overloading \">>\", \"<<\"","time_limit":"1","memory_limit":"262144","description":"<div>&nbsp;<\/div>\r\n<div style=\"text-indent: 21pt\"><font size=\"3\">You are to overload the operators &quot;&gt;&gt;&quot;, &quot;&lt;&lt;&quot;, &quot;*&quot;&nbsp;for&nbsp;the Complex&nbsp;class, which respectively mean reading an object from a stream,&nbsp;sending an object to a stream,&nbsp;&nbsp;and&nbsp;the&nbsp;&quot;multiply&quot;&nbsp;operation for complex numbers.<\/font><\/div>\r\n<div>&nbsp;<\/div>\r\n<div><span style=\"color: #0000ff\"><font size=\"3\">class Complex<br \/>\r\n{<br \/>\r\npublic:<br \/>\r\n&nbsp;&nbsp;&nbsp; Complex(int a=0, int b=0): real(a), imag(b) {}<br \/>\r\n&nbsp;&nbsp;&nbsp; friend Complex operator*(const Complex&amp;, const Complex&amp;);<br \/>\r\n&nbsp;&nbsp;&nbsp; friend istream&amp; operator&gt;&gt;(istream&amp;, Complex&amp;);<br \/>\r\n&nbsp;&nbsp;&nbsp; friend ostream&amp; operator&lt;&lt;(ostream&amp;, const Complex&amp;);<br \/>\r\nprivate:<br \/>\r\n&nbsp;&nbsp;&nbsp; int real;<br \/>\r\n&nbsp;&nbsp;&nbsp; int imag;<br \/>\r\n};<\/font><\/span><\/div>\r\n<div>&nbsp;<\/div>\r\n<div style=\"text-indent: 21pt\"><font size=\"3\">Your submitted source code should include the implementation of the required operators, but without the Complex class.<\/font><\/div>\r\n<div style=\"text-indent: 21pt\"><font size=\"3\">No main() function should be included.<\/font><\/div>\r\n<p>&nbsp;<\/p>","input":"<div style=\"text-indent: 21pt\"><font size=\"3\">The complex numbers have the form &quot;a+bi&quot;, or &quot;a-bi&quot;, where &quot;a&quot; is an integer, &quot;b&quot; is a non-negative integer, and there is no space&nbsp;inside the string. There is white space separating consecutive complex numbers. You're&nbsp;ensured that the input is correct.&nbsp;<\/font><\/div>","output":"<div style=\"text-indent: 21pt\"><font size=\"3\">To make it simple, output the complex numbers in the form &quot;a+bi&quot;, or &quot;a-bi&quot;, where &quot;a&quot; is an integer, &quot;b&quot; is a non-nagative integer, even if a or b&nbsp;is zero,&nbsp;e.g., &quot;0+0i&quot;, &quot;3+0i&quot;, &quot;0-3i&quot;. Your output should contain nothing else&nbsp;but the string &quot;a+bi&quot; or &quot;a-bi&quot;.<\/font><\/div>\r\n<p>&nbsp;<\/p>","sample_input":"","sample_output":"","accepted":"0","submissions":"0","special_judge":"0","has_framework":"1","author":"","hint":"","avail":"1","cid":"2256","rate_tot":"0","rate_count":"0","dataversion":"0","stdsid":"0"}