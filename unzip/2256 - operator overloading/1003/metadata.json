{"pid":"17887","title":"The String class","time_limit":"1","memory_limit":"262144","description":"<p>Implement the String class:<br \/>\r\nclass String {<br \/>\r\npublic:<br \/>\r\n&nbsp;&nbsp;&nbsp; String();&nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; \/\/ x = &quot;&quot;<br \/>\r\n&nbsp;&nbsp;&nbsp; String(const char*);&nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; \/\/ x = &quot;abc&quot; <br \/>\r\n&nbsp;&nbsp;&nbsp; String(const String&amp;);&nbsp;&nbsp;&nbsp; \/\/ x = other_string<br \/>\r\n&nbsp;&nbsp;&nbsp; String&amp; operator=(const char *);<br \/>\r\n&nbsp;&nbsp;&nbsp; String&amp; operator=(const String&amp;);<br \/>\r\n&nbsp;&nbsp;&nbsp; <span style=\"color: rgb(255, 0, 0);\">String operator+(String);<\/span><br \/>\r\n&nbsp;&nbsp;&nbsp; char&amp; operator[](int i);<br \/>\r\n&nbsp;&nbsp;&nbsp; char operator[](int i) const;<br \/>\r\n&nbsp;&nbsp;&nbsp; int size() const;<br \/>\r\n&nbsp;&nbsp;&nbsp; String&amp; operator+=(const String&amp;);<br \/>\r\n&nbsp;&nbsp;&nbsp; String&amp; operator+=(const char*);<br \/>\r\n&nbsp;&nbsp;&nbsp; friend ostream&amp; operator&lt;&lt;(ostream&amp;, const String&amp;);<br \/>\r\n&nbsp;&nbsp;&nbsp; friend istream&amp; operator&gt;&gt;(istream&amp;, String&amp;);<br \/>\r\n&nbsp;&nbsp;&nbsp; friend bool operator==(const String&amp; x, const char* s);<br \/>\r\n&nbsp;&nbsp;&nbsp; friend bool operator==(const String&amp; x, const String&amp; y);<br \/>\r\n&nbsp;&nbsp;&nbsp; friend bool operator!=(const String&amp; x, const char* s);<br \/>\r\n&nbsp;&nbsp;&nbsp; friend bool operator!=(const String&amp; x, const String&amp; y);<br \/>\r\n};<br \/>\r\nThe String class implemented may be used like this:<br \/>\r\nf()<br \/>\r\n{<br \/>\r\n&nbsp;&nbsp;&nbsp; String x, y, s;<br \/>\r\n&nbsp;&nbsp;&nbsp; cout &lt;&lt; &quot;Please enter two strings\\n&quot;;<br \/>\r\n&nbsp;&nbsp;&nbsp; cin &gt;&gt; x &gt;&gt; y;<br \/>\r\n&nbsp;&nbsp;&nbsp; cout &lt;&lt; &quot;x= &quot; &lt;&lt; x &lt;&lt; &quot; , y = &quot; &lt;&lt; y &lt;&lt; '\\n';<br \/>\r\n<br \/>\r\n&nbsp;&nbsp;&nbsp; cout &lt;&lt; &quot;s = \\&quot;&quot; &lt;&lt; s &lt;&lt; &quot;\\&quot;&quot; &lt;&lt; endl;<br \/>\r\n&nbsp;&nbsp;&nbsp; s = &quot;abc&quot;;<br \/>\r\n&nbsp;&nbsp;&nbsp; cout &lt;&lt; &quot;s = \\&quot;&quot; &lt;&lt; s &lt;&lt; &quot;\\&quot;&quot; &lt;&lt; endl;<br \/>\r\n<br \/>\r\n&nbsp;&nbsp;&nbsp; cout &lt;&lt; &quot;\\&quot;&quot; &lt;&lt; x &lt;&lt; &quot;\\&quot; + \\&quot;&quot; &lt;&lt; y &lt;&lt; &quot;\\&quot; = &quot; &lt;&lt; &quot;\\&quot;&quot; &lt;&lt; x+y &lt;&lt; &quot;\\&quot;\\n&quot;;<br \/>\r\n&nbsp;&nbsp;&nbsp; String z = x;<br \/>\r\n&nbsp;&nbsp;&nbsp; if (x != z) cout &lt;&lt; &quot;x corrupted!\\n&quot;;<br \/>\r\n&nbsp;&nbsp;&nbsp; x[0] = '!';<br \/>\r\n&nbsp;&nbsp;&nbsp; if (x == z) cout &lt;&lt; &quot;write failed!\\n&quot;;<br \/>\r\n&nbsp;&nbsp;&nbsp; cout &lt;&lt; &quot;exit: &quot; &lt;&lt; x &lt;&lt; ' ' &lt;&lt; z &lt;&lt; '\\n';&nbsp;&nbsp;&nbsp; <br \/>\r\n<br \/>\r\n&nbsp;&nbsp;&nbsp; z = s;<br \/>\r\n&nbsp;&nbsp;&nbsp; if (s != z) cout &lt;&lt; &quot;s corrupted!\\n&quot;;<br \/>\r\n&nbsp;&nbsp;&nbsp; s[0] = '!';<br \/>\r\n&nbsp;&nbsp;&nbsp; if (s == z) cout &lt;&lt; &quot;write failed!\\n&quot;;<br \/>\r\n&nbsp;&nbsp;&nbsp; cout &lt;&lt; &quot;exit: &quot; &lt;&lt; s &lt;&lt; ' ' &lt;&lt; z &lt;&lt; '\\n';&nbsp;&nbsp;&nbsp; <br \/>\r\n}<br \/>\r\nThe f() will has the same output when String replace by string in STL.<br \/>\r\n&nbsp;<\/p>","input":"","output":"","sample_input":"","sample_output":"","accepted":"0","submissions":"0","special_judge":"0","has_framework":"1","author":"","hint":"","avail":"1","cid":"2256","rate_tot":"0","rate_count":"0","dataversion":"0","stdsid":"0"}