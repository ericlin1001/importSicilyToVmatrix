{"config": {"entry_point": "standard_main.exe", "grading": {"random tests": 0, "standard tests": 70, "google tests detail": {}, "compile check": 10, "static check": 20, "memory check": 0, "google tests": 0}, "submission": ["source.h"], "output_program": "main.exe", "language": ["c++"], "standard_language": "c++", "exec_flag": "--gtest_output=xml:/tmp/Result.xml", "google tests info": {}, "standard_score": 100, "standard": {"standard_output": ["standard_output0"], "random_source": [], "hidden_support": [], "standard_input": ["standard_input0"], "support": ["framework.cpp"]}, "random": {"run_times": 0, "compile_command": "gcc SOURCE -w -std=c++14 -o random"}, "limits": {"memory": 32, "time": 1000}, "compilers": {"clang": {"version": "default", "command": "clang framework.cpp -g -w -lm -o OUTPUT_PROGRAM"}, "c": {"version": "default", "command": "gcc framework.cpp -g -w -lm -o OUTPUT_PROGRAM"}, "clang++": {"version": "default", "command": "clang++ framework.cpp -g -w -lm -std=c++11 -o OUTPUT_PROGRAM"}, "c++": {"version": "default", "command": "g++ framework.cpp -g -w -lm -std=c++14 -o OUTPUT_PROGRAM"}}}, "ptype_id": 0, "title": "From Sicily::2311 - Polymorphism::1002::Estate", "files": {"standard_output": {"standard_output0": "295738404.9\n306373990.5\n"}, "random_source": {}, "submission": {"source.h": "#include <iostream>\n#include <cmath>\n\nusing namespace std;\n\nclass Land {\n\tpublic:\n\t\tLand():price_(0) {}\n\t\texplicit Land(int price) {\n\t\t\tprice_ = price;\n\t\t}\n\t\tvirtual double CalMoney() = 0;\n\tprotected:\n\t\tint price_;\n};\n\nclass Square: public Land {\n\tpublic:\n\t\tSquare(double len, int price) {\n\t\t\tlen_ = len;\n\t\t\tprice_ = price;\n\t\t}\n\t\tdouble CalMoney() {\n\t\t\treturn pow(len_, 2) * price_;\n\t\t}\n\tprivate:\n\t\tdouble len_;\n};\n\nclass Circle:public Land {\n\tpublic:\n\t\tCircle(double radius, int price) {\n\t\t\tradius_ = radius;\n\t\t\tprice_ = price;\n\t\t}\n\t\tdouble CalMoney() {\n\t\t\treturn acos(-1) * pow(radius_, 2) * price_;\n\t\t}\n\tprivate:\n\t\tdouble radius_;\n};\n\nclass Accountant {\n\tpublic:\n\t\tAccountant():money_(0) {}\n\t\tvoid DevelopEstate(Land* land) {\n\t\t\tmoney_ += land -> CalMoney();\n\t\t}\n\t\tdouble CheckMoney() {\n\t\t\treturn money_;\n\t\t}\n\tprivate:\n\t\tdouble money_;\n};\n"}, "hidden_support": {}, "standard_input": {"standard_input0": ""}, "support": {"framework.cpp": "#include <iostream>\n#include <iomanip>\nusing namespace std;\n\n#include \"source.h\"\n/*\nclass Land {\n  public:\n    Land() : price_(0) {}\n    explicit Land(int price);\n    // calculate how much Feng Gor can earn from the land\n    virtual double CalMoney() = 0;\n  protected:\n    // price of unit area\n    int price_;\n};\n\nclass Square : public Land {\n  public:\n    Square(double len, int price);\n    double CalMoney();\n  private:\n    //length of side of a square\n    double len_;\n};\n\nclass Circle : public Land {\n  public:\n    Circle(double radius, int price);\n    double CalMoney();\n  private:\n    //length of radius of a circle\n    double radius_;\n};\n\nclass Accountant {\n  public:\n    Accountant() : money_(0) {}\n    // develop a land, earn the value of the land\n    void DevelopEstate(Land* land);\n    // return the value of money_\n    double CheckMoney();\n  private:\n    double money_;\n};\n\nvoid Accountant::DevelopEstate(Land* land) {\n  money_ += land->CalMoney();\n}\n\ndouble Accountant::CheckMoney() {\n  return money_;\n}\nLand::Land(int price) : price_(price) {}\n\nSquare::Square(double len, int price) : len_(len), Land(price) {}\n\ndouble Square::CalMoney() {\n  return price_ * len_ * len_;\n}\n\nCircle::Circle(double radius, int price) : radius_(radius), Land(price) {}\n\n#include <cmath>\ndouble Circle::CalMoney() {\n  static double pi = acos(-1);\n  return price_ * pi * radius_ * radius_;\n}\n*/\n\nint main(int argc, const char *argv[]) {\n  Accountant py;\n  Circle *a = new Circle(179, 2938);\n  Square *b = new Square(90.8, 1290);\n  py.DevelopEstate(a);\n  cout << setprecision(10) << py.CheckMoney() << endl;\n  py.DevelopEstate(b);\n  cout << setprecision(10) << py.CheckMoney() << endl;\n\n  return 0;\n}\n"}}, "description": "# Description\n<p>&nbsp;Feng Gor\u662f\u8457\u540d\u7684\u623f\u5730\u4ea7\u5546\uff0c\u5979\u6bcf\u5929\u7684\u4e3b\u8981\u5de5\u4f5c\u5c31\u662f&mdash;&mdash;\u6570\u94b1\u3002\u8fd9\u5e76\u4e0d\u662f\u4e00\u4ef6\u5bb9\u6613\u7684\u4e8b\uff0cFeng Gor\u4e3b\u8981\u6295\u8d44\u4e24\u7c7b\u5730\uff0c\u4e00\u7c7b\u662f\u5706\u7684\uff0c\u4e00\u7c7b\u662f\u65b9\u7684\u3002\u73b0\u5728\u4f60\u4f5c\u4e3a\u5979\u7684\u4f1a\u8ba1\uff0c\u9700\u8981\u5e2e\u5979\u6570\u94b1\u3002Circle\u7c7b\u548cSquare\u7c7b\u7ee7\u627f\u4e8eLand\u7c7b\uff0c\u5206\u522b\u4ee3\u8868\u5706\u7684\u5730\u548c\u65b9\u7684\u5730\uff0c\u6839\u636e\u5355\u4f4d\u9762\u79ef\u4ef7\u683c(price)\u548c\u5730\u7684\u9762\u79ef(\u6839\u636e\u8fb9\u957f\u6216\u534a\u5f84\u7b97\u51fa)\u3002Accountant\u7c7b\u7528\u4e8e\u8ba1\u7b97Feng Gor\u5f00\u53d1\u5404\u79cd\u623f\u5730\u4ea7\u5e26\u6765\u7684\u6536\u5165\u3002DevelopEstate\u51fd\u6570\u63a5\u6536\u4e00\u4e2aLand\u7684\u6307\u9488\uff0c\u8ba1\u7b97\u5f00\u53d1\u8fd9\u5757\u623f\u5730\u4ea7\u5e26\u6765\u7684\u6536\u5165\uff08\u8fd9\u91cc\u7528\u5230\u4e86\u52a8\u6001\u7ed1\u5b9a\u54e6\uff09\u3002CheckMoney\u51fd\u6570\u8fd4\u56de\u5f53\u524d\u7684\u6536\u5165\u3002</p>\r\n<p><img src='%IMGPATH%QQ20130410-2.png'/></p>\r\n<p><img src='%IMGPATH%QQ20130410-3(1).png'/></p>\n# Input\n<p>&nbsp;</p>\r\n<p>&nbsp;</p>\n# Output\n\n# Sample_Input\n```\n//\u8fd9\u91cc\u7ed9\u51fa\u4e00\u4e2a\u6d4b\u8bd5\u7684main\u51fd\u6570\r\n#include <iostream>\r\n#include <iomanip>\r\nusing namespace std;\r\n\r\nint main(int argc, const char *argv[]) {\r\n  Accountant py;\r\n  Circle *a = new Circle(100, 10000);\r\n  Square *b = new Square(100, 50000);\r\n  py.DevelopEstate(a);\r\n  cout << setprecision(10) << py.CheckMoney() << endl;\r\n  py.DevelopEstate(b);\r\n  cout << setprecision(10) << py.CheckMoney() << endl;\r\n\r\n  return 0;\r\n}\n```\n# Sample_Ouput\n```\n314159265.4\r\n814159265.4\n```\n# Hint\n<p>\u4e3a\u4e86\u9632\u6b62\u5927\u5bb6\u80cc\u4e0d\u719f\u5706\u5468\u7387\u5bfc\u81f4Wrong Answer\uff0c\u7279\u610f\u63d0\u9192\u4e00\u4e0b\uff0cpi\u53ef\u4ee5\u7528acos(-1)\u8868\u793a\u3002acos\u5728cmath\u5e93\u91cc\u3002</p>\n"}