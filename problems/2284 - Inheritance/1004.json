{"description": "# Constructor and inheritance\n\n# Description\n<div>&nbsp;</div>\r\n<div style=\"text-indent: 21pt\"><font size=\"3\">Class A is defined as follows: </font></div>\r\n<div>&nbsp;</div>\r\n<div><span style=\"color: #0000ff\"><font size=\"3\">class A<br />\r\n{<br />\r\npublic:<br />\r\n&nbsp;&nbsp;&nbsp; A(int a0):a(a0) {}<br />\r\n&nbsp;&nbsp;&nbsp; void show() { cout&lt;&lt;&quot;a=&quot;&lt;&lt;a&lt;&lt;endl; }<br />\r\nprivate:<br />\r\n&nbsp;&nbsp;&nbsp; int a;<br />\r\n};<br />\r\n</font></span></div>\r\n<div>&nbsp;</div>\r\n<div style=\"text-indent: 21pt\"><font size=\"3\">Class B inherits from A.&nbsp;Its<font color=\"#000000\"> constructor has two parameters,&nbsp;with&nbsp;the first one for&nbsp;the member <span style=\"color: #0000ff\">a</span> and the second for the member <span style=\"color: #0000ff\">b</span>. Class B also redefines the <span style=\"color: #0000ff\">show</span> function. Now you need to complete the definition of class B to&nbsp;produce the desired output.</font></font></div>\r\n<div>&nbsp;</div>\r\n<div><span style=\"color: #0000ff\"><font size=\"3\">class B<br />\r\n{<br />\r\npublic:<br />\r\n&nbsp;&nbsp;&nbsp; B(int, int);<br />\r\n&nbsp;&nbsp;&nbsp; void show();<br />\r\nprivate:<br />\r\n&nbsp;&nbsp;&nbsp; int b;<br />\r\n};</font></span></div>\r\n<div>&nbsp;</div>\r\n<div style=\"text-indent: 21pt\"><font size=\"3\">Your submitted&nbsp;source code should&nbsp;include the whole&nbsp;implementation of&nbsp;the class B, but without&nbsp;the class A.</font></div>\r\n<div style=\"text-indent: 21pt\"><font size=\"3\">No main() function should be included.</font></div>\r\n<div>&nbsp;</div>\r\n<div><strong><font size=\"3\">Note</font></strong><font size=\"3\">: the main() function of the test framework&nbsp;looks like this: </font></div>\r\n<div><font size=\"3\">------------------------------------------------------------------------------</font></div>\r\n<div><font size=\"3\">int main()<br />\r\n{<br />\r\n&nbsp;&nbsp;&nbsp; B b(1, 2);<br />\r\n&nbsp;&nbsp;&nbsp; b.show();<br />\r\n&nbsp;&nbsp;&nbsp; return 0;<br />\r\n}</font></div>\r\n<div><font size=\"3\">------------------------------------------------------------------------------</font></div>\n\n# Input\n\n\n# Output\n\n\n# Sample_Input\n```\n\n```\n\n# Sample_Ouput\n```\na=1\r\nb=2\n```\n\n# Hint\n\n\n", "title": "From Sicily::2284 - Inheritance::1004::Constructor and inheritance", "ptype_id": 0, "config": {"limits": {"time": 1000, "memory": 32}, "output_program": "main.exe", "standard_score": 100, "compilers": {"c": {"version": "default", "command": "gcc framework.cpp -g -w -lm -o OUTPUT_PROGRAM"}, "c++": {"version": "default", "command": "g++ framework.cpp -g -w -lm -std=c++14 -o OUTPUT_PROGRAM"}, "clang": {"version": "default", "command": "clang framework.cpp -g -w -lm -o OUTPUT_PROGRAM"}, "clang++": {"version": "default", "command": "clang++ framework.cpp -g -w -lm -std=c++11 -o OUTPUT_PROGRAM"}}, "google tests info": {}, "grading": {"standard tests": 70, "google tests": 0, "google tests detail": {}, "memory check": 0, "static check": 20, "compile check": 10, "random tests": 0}, "language": ["c++"], "random": {"run_times": 0, "compile_command": "gcc SOURCE -w -std=c++14 -o random"}, "standard": {"hidden_support": [], "random_source": [], "standard_output": ["standard_output0"], "standard_input": ["standard_input0"], "support": ["framework.cpp"]}, "exec_flag": "--gtest_output=xml:/tmp/Result.xml", "standard_language": "c++", "submission": ["source.h"], "entry_point": "standard_main.exe"}, "files": {"hidden_support": {}, "standard_output": {"standard_output0": "a=10\nb=15\n"}, "support": {"framework.cpp": "#include <iostream>\n#include <string>\n#include <vector>\nusing namespace std;\n\n\nclass A\n{\npublic:\n\tA(int a0):a(a0) {}\n\tvoid show() { cout<<\"a=\"<<a<<endl; }\nprivate:\n\tint a;\n};\n\n#include \"source.h\"\n\nint main()\n{\n//\tfreopen(\"test01.in\", \"r\", stdin);\n//\tfreopen(\"test01.out\", \"w\", stdout);\n\tB b(10,15);\n\tb.show();\n\n    return 0;\n}"}, "submission": {"source.h": "#include <iostream>\nclass B: public A {\n\tpublic:\n\t\tB(int x, int y): A(x), b(y) {};\n\t\tvoid show() {\n\t\t\tA::show();\n\t\t\tcout<<\"b=\" << b << endl;\n\t\t};\n\tprivate:\n\t\tint b;\n};\n\n"}, "random_source": {}, "standard_input": {"standard_input0": ""}}}