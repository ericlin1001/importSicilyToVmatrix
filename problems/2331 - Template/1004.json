{"config": {"google tests info": {}, "random": {"compile_command": "gcc SOURCE -w -std=c++14 -o random", "run_times": 0}, "output_program": "main.exe", "grading": {"standard tests": 70, "google tests": 0, "static check": 20, "compile check": 10, "memory check": 0, "google tests detail": {}, "random tests": 0}, "entry_point": "standard_main.exe", "standard": {"standard_output": ["standard_output0"], "hidden_support": [], "standard_input": ["standard_input0"], "random_source": [], "support": ["framework.cpp"]}, "limits": {"time": 1000, "memory": 32}, "language": ["c++"], "standard_language": "c++", "exec_flag": "--gtest_output=xml:/tmp/Result.xml", "standard_score": 100, "submission": ["source.h"], "compilers": {"clang++": {"version": "default", "command": "clang++ framework.cpp -g -w -lm -std=c++11 -o OUTPUT_PROGRAM"}, "c++": {"version": "default", "command": "g++ framework.cpp -g -w -lm -std=c++14 -o OUTPUT_PROGRAM"}, "c": {"version": "default", "command": "gcc framework.cpp -g -w -lm -o OUTPUT_PROGRAM"}, "clang": {"version": "default", "command": "clang framework.cpp -g -w -lm -o OUTPUT_PROGRAM"}}}, "ptype_id": 0, "description": "# Description\n<div>&nbsp;</div>\r\n<div style=\"text-indent: 21pt\"><font size=\"3\">Write&nbsp;a generic function <span style=\"color: #0000ff\">T max(T seq[], int n)</span> that returns&nbsp;the maximum element of a given&nbsp;sequence with n elements (n&gt;=1). You are ensured the type T could be compared with operator '&lt;'.</font></div>\r\n<div>&nbsp;</div>\r\n<div style=\"text-indent: 21pt\"><font size=\"3\">Your submitted source code should include the implementation of the <span style=\"color: #0000ff\">max</span> function template.</font></div>\r\n<div style=\"text-indent: 21pt\"><font size=\"3\">No main() function should be included.</font></div>\r\n<p>&nbsp;</p>\n# Input\n\n# Output\n\n# Sample_Input\n```\n\n```\n# Sample_Ouput\n```\n\n```\n# Hint\n\n", "title": "From Sicily::2331 - Template::1004::The Max of a sequence", "files": {"standard_input": {"standard_input0": ""}, "hidden_support": {}, "support": {"framework.cpp": "#include<iostream>\n#include<string>\n#include<vector>\n#include<algorithm>\nusing namespace std;\n\n#include \"source.h\"\n\nint main()\n{\n\t//freopen(\"test01.in\", \"r\", stdin);\n\t//freopen(\"test01.out\", \"w\", stdout);\n\n\n\t{\n\t\tchar arr[] = \"pqwridkfendkfnccsdsafsfsf\";\n\t\tcout<<max(arr,strlen(arr))<<endl;\n\t}\n\t{\n\t\tdouble arr[] = { 2.1, 3.4, 5.6, 3.3, 5.1, 10.2 };\n\t\tcout<<max(arr,sizeof(arr)/sizeof(double))<<endl;\n\t}\n\t{\n\t\tint arr[] = { 2, 3, 5, 3, 5, 10, 1, 1005, 532 };\n\t\tcout<<max(arr,sizeof(arr)/sizeof(int))<<endl;\n\t}\n\t{\n\t\tstring arr[3] = { \"hello\", \"hi\", \"haha\" };\n\t\tcout<<max(arr,3)<<endl;\n\t}\n\n\treturn 0;\n}"}, "standard_output": {"standard_output0": "w\n10.2\n1005\nhi\n"}, "submission": {"source.h": "#include <iostream>\n#include <cstring>\nusing namespace std;\n\ntemplate<class T>\nT max(T seq[], int n);\ntemplate<class T>\nT max(T seq[], int n) {\n\tT max_v = seq[0];\n\tfor (int i = 1; i < n; ++i) {\n\t\tif (max_v < seq[i])\n\t\t\tmax_v = seq[i];\n\t}\n\treturn max_v;\n}\n"}, "random_source": {}}}