{"files": {"hidden_support": {}, "support": {"framework.cpp": "#include<iostream>\n#include<string>\n#include\"source.h\"\nusing namespace std;\n\nostream& operator<<(ostream& os, const Date& date)\n{\n  os << date.getYear() << \"-\" << date.getMonth() << \"-\" << date.getDay();\n  return os;\n}\n\n\n\n/*\nf3_1() test for:\n  operator \n  ++(prefix), --(prefix), \n  ++(postfix), --(postfix), \n*/\n\nvoid f3_1(const Date& d)\n{\n  Date date = d;\n  cout << \"date = \" << date << endl;\n  cout << \"++date = \" << ++date << endl;\n  cout << \"--date = \" << --date << endl;\n  cout << \"date++ = \" << date++ << endl;\n  cout << \"date-- = \" << date-- << endl;\n  cout << \"date = \" << date << endl;\n\n  cout << endl;\n}\n\n\n\nvoid f3()\n{\n  Date date1, date2(2004,2,28), date3(2007,2,28),date4(2000,2,28),date5(99,12,31);\n  f3_1(date1);\n  f3_1(date2);\n  f3_1(date3);\n  f3_1(date4);\n  f3_1(date5);\n}\n\n\nint main()\n{\n  f3();\n  //system(\"PAUSE\");\n  return 0;\n}\n\n\n\n"}, "submission": {"source.h": "#include <iostream>\nusing namespace std;\nint m[12]= {31,28,31,30,31,30,31,31,30,31,30,31};\nclass Date {\n\tpublic:\n\t\tDate(int y=0, int m=1, int d=1) {\n\t\t\tyear = y;\n\t\t\tmonth = m;\n\t\t\tday = d;\n\t\t};\n\t\tstatic bool leapyear(int year);\n\t\tint getYear() const;\n\t\tint getMonth() const;\n\t\tint getDay() const;\n\t\tDate& operator ++();\n\t\tDate& operator --();\n\t\tDate operator ++(int);\n\t\tDate operator --(int);\n\t\t//friend ostream &operator <<(ostream &out ,const Date& a);\n\tprivate:\n\t\tint year,month,day;\n};\n// ostream &operator <<(ostream &out ,const Date& a)\n//{\n//  out<<a.year<<\" \"<<a.month<<\" \"<<a.day<<endl;\n//  return out;\n//}\nint Date::getYear() const {\n\treturn year;\n}\nint Date::getMonth() const {\n\treturn month;\n}\nint Date::getDay() const {\n\treturn day;\n}\nbool Date::leapyear(int year) {\n\tif(year%4==0&&year%100!=0||year%400==0)\n\t\treturn true;\n\telse\n\t\treturn false;\n}\nDate Date::operator --(int) {\n\tDate a;\n\ta = *this;\n\tday--;\n\tif(day==0&&month!=1) {\n\t\tday = m[month-2];\n\t\tif(month==3&&leapyear(year))\n\t\t\tday++;\n\t\tmonth--;\n\t} else if(day==0&&month==1) {\n\t\tday = 31;\n\t\tmonth = 12;\n\t\tyear--;\n\t}\n\treturn a;\n}\nDate Date::operator ++(int) {\n\tDate a;\n\ta = *this;\n\tday++;\n\tif(month!=2) {\n\t\tif(day>m[month-1]) {\n\t\t\tday-=m[month-1];\n\t\t\tmonth++;\n\t\t} else if(day>(m[month-1]-1))\n\t\t\tif(month>12) {\n\t\t\t\tmonth=1;\n\t\t\t\tyear++;\n\t\t\t}\n\t} else {\n\t\tif(leapyear(year)) {\n\t\t\tif(day>29) {\n\t\t\t\tmonth = 3;\n\t\t\t\tday = 1;\n\t\t\t}\n\t\t} else if(!leapyear(year)) {\n\t\t\tif(day>28) {\n\t\t\t\tmonth = 3;\n\t\t\t\tday = 1;\n\t\t\t}\n\t\t}\n\t}\n\tif(month==13) {\n\t\tmonth =1;\n\t\tday = 1;\n\t\tyear++;\n\t}\n\treturn a;\n}\nDate& Date::operator --() {\n\tday--;\n\tif(day==0&&month!=1) {\n\t\tday = m[month-2];\n\t\tif(month==3&&leapyear(year))\n\t\t\tday++;\n\t\tmonth--;\n\t} else if(day==0&&month==1) {\n\t\tday = 31;\n\t\tmonth = 12;\n\t\tyear--;\n\t}\n\treturn *this;\n}\nDate& Date::operator ++() {\n\tday++;\n\tif(month!=2) {\n\t\tif(day>m[month-1]) {\n\t\t\tday-=m[month-1];\n\t\t\tmonth++;\n\t\t} else if(day>(m[month-1]-1))\n\t\t\tif(month>12) {\n\t\t\t\tmonth=1;\n\t\t\t\tyear++;\n\t\t\t}\n\t} else {\n\t\tif(leapyear(year)) {\n\t\t\tif(day>29) {\n\t\t\t\tmonth = 3;\n\t\t\t\tday = 1;\n\t\t\t}\n\t\t} else if(!leapyear(year)) {\n\t\t\tif(day>28) {\n\t\t\t\tmonth = 3;\n\t\t\t\tday = 1;\n\t\t\t}\n\t\t}\n\t}\n\tif(month==13) {\n\t\tmonth =1;\n\t\tday = 1;\n\t\tyear++;\n\t}\n\treturn *this;\n}\n\n"}, "standard_output": {"standard_output0": "date = 0-1-1\n++date = 0-1-2\n--date = 0-1-1\ndate++ = 0-1-1\ndate-- = 0-1-2\ndate = 0-1-1\n\ndate = 2004-2-28\n++date = 2004-2-29\n--date = 2004-2-28\ndate++ = 2004-2-28\ndate-- = 2004-2-29\ndate = 2004-2-28\n\ndate = 2007-2-28\n++date = 2007-3-1\n--date = 2007-2-28\ndate++ = 2007-2-28\ndate-- = 2007-3-1\ndate = 2007-2-28\n\ndate = 2000-2-28\n++date = 2000-2-29\n--date = 2000-2-28\ndate++ = 2000-2-28\ndate-- = 2000-2-29\ndate = 2000-2-28\n\ndate = 99-12-31\n++date = 100-1-1\n--date = 99-12-31\ndate++ = 99-12-31\ndate-- = 100-1-1\ndate = 99-12-31\n\n"}, "random_source": {}, "standard_input": {"standard_input0": ""}}, "description": "# The Date class (version 2)\n\n# Description\n<pre>\r\nImplement the operator ++(prefix), --(prefix), ++(postfix), --(postfix), in the class Date\r\nclass Date\r\n{\r\npublic:\r\n  Date(int y=0, int m=1, int d=1); \r\n  static bool leapyear(int year);\r\n  int getYear() const;\r\n  int getMonth() const;\r\n  int getDay() const;\r\n\r\n  friend ostream&amp; operator&lt;&lt;(ostream&amp;, const Date&amp;);  \r\n  // add any member you need here \r\n};\r\n\r\nYou implementation should enable the usage like this:\r\nvoid f()\r\n{\r\n  Date date(2004,2,28);\r\n  cout &lt;&lt; &quot;date = &quot; &lt;&lt; date &lt;&lt; endl;\r\n  cout &lt;&lt; &quot;++date = &quot; &lt;&lt; ++date &lt;&lt; endl;\r\n  cout &lt;&lt; &quot;--date = &quot; &lt;&lt; --date &lt;&lt; endl;\r\n  cout &lt;&lt; &quot;date++ = &quot; &lt;&lt; date++ &lt;&lt; endl;\r\n  cout &lt;&lt; &quot;date-- = &quot; &lt;&lt; date-- &lt;&lt; endl;\r\n  cout &lt;&lt; &quot;date = &quot; &lt;&lt; date &lt;&lt; endl;\r\n}\r\n\r\nThe output of f() should be:\r\n\r\ndate = 2004-2-28\r\n++date = 2004-2-29\r\n--date = 2004-2-28\r\ndate++ = 2004-2-28\r\ndate-- = 2004-2-29\r\ndate = 2004-2-28\r\n\r\n\u63d0\u4ea4\u65f6\u4e0d\u9700\u8981\u63d0\u4ea4operator &lt;&lt; \u91cd\u8f7d\u3002\r\n </pre>\n\n# Input\n\n\n# Output\n\n\n# Sample_Input\n```\n\n```\n\n# Sample_Ouput\n```\n\n```\n\n# Hint\n\n\n", "ptype_id": 0, "config": {"grading": {"standard tests": 70, "memory check": 0, "google tests detail": {}, "random tests": 0, "static check": 20, "google tests": 0, "compile check": 10}, "google tests info": {}, "standard_score": 100, "submission": ["source.h"], "compilers": {"c++": {"version": "default", "command": "g++ framework.cpp -g -w -lm -std=c++14 -o OUTPUT_PROGRAM"}, "clang++": {"version": "default", "command": "clang++ framework.cpp -g -w -lm -std=c++11 -o OUTPUT_PROGRAM"}, "clang": {"version": "default", "command": "clang framework.cpp -g -w -lm -o OUTPUT_PROGRAM"}, "c": {"version": "default", "command": "gcc framework.cpp -g -w -lm -o OUTPUT_PROGRAM"}}, "output_program": "main.exe", "standard_language": "c++", "standard": {"random_source": [], "hidden_support": [], "standard_input": ["standard_input0"], "support": ["framework.cpp"], "standard_output": ["standard_output0"]}, "exec_flag": "--gtest_output=xml:/tmp/Result.xml", "language": ["c++"], "random": {"compile_command": "gcc SOURCE -w -std=c++14 -o random", "run_times": 0}, "entry_point": "standard_main.exe", "limits": {"time": 1000, "memory": 32}}, "title": "From Sicily::2256 - operator overloading::1001::The Date class (version 2)"}