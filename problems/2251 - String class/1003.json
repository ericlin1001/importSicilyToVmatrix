{"title": "From Sicily::2251 - String class::1003::Cycling the words", "description": "# Cycling the words\n\n# Description\n<p>Given a line contains N words, print the N lines. The first line is the same as the input. After printing each line, the first word of this line in put to the end of the next line.</p>\n\n# Input\n<p>A line contains N words seperated by one blank. N is not given in the problem: you need to count the number of words in the input line to find it out. The line contains less than 100 characters.</p>\n\n# Output\n<p>N lines.<br />\r\nThe first line equals the input.<br />\r\nFor the rest N-1 lines, the first word in a line in put to the end in the next line. There is one space between words.</p>\n\n# Sample_Input\n```\nPlease think about it carefully\n```\n\n# Sample_Ouput\n```\nPlease think about it carefully\r\nthink about it carefully Please\r\nabout it carefully Please think\r\nit carefully Please think about\r\ncarefully Please think about it\r\n\n```\n\n# Hint\n\n\n", "ptype_id": 0, "files": {"submission": {"source.cpp": "#include <iostream>\n#include <string>\nusing namespace std;\nint main(void) {\n\tstring ch;\n\tgetline(cin,ch);\n\tstatic int i,j,count,n;\n\tn=ch.size();\n\tfor(i=0; i<n; i++) {\n\t\tif(ch[i]==' ') count++;\n\t}\n\tcount+=1;\n\t//cout<<ch<<endl<<count<<endl;\n\tchar a[count][20];\n\tint key = 0;\n\tfor(i=0; i<n; i++) {\n\t\t//please call me handsome boy.\n\t\tif(ch[i]==' ') {\n\t\t\ta[key][j]='\\0';\n\t\t\tkey++;\n\t\t\tj=0;\n\n\t\t\t//i++;\n\t\t} else a[key][j++] = ch[i];\n\t\tif(i==(n-1)) a[count-1][j]='\\0';\n\t}\n\n\tint k=0;\n\tfor(j=0; j<count; j++) {\n\t\tfor(i=j,k=0; k<count; k++,i++) {\n\t\t\tif(i>=count) i = 0;\n\t\t\tcout<<a[i];\n\t\t\tif(k!=count-1) cout<<' ';\n\t\t}\n\t\tcout<<endl;\n\t}\n}\n\n"}, "hidden_support": {}, "support": {}, "standard_input": {"standard_input0": "love me or kill me please\n"}, "random_source": {}, "standard_output": {"standard_output0": "love me or kill me please\nme or kill me please love\nor kill me please love me\nkill me please love me or\nme please love me or kill\nplease love me or kill me\n"}}, "config": {"submission": ["source.cpp"], "output_program": "main.exe", "standard_language": "c++", "standard_score": 100, "compilers": {"clang++": {"version": "default", "command": "clang++ CODE_FILES -g -w -lm -std=c++11 -o OUTPUT_PROGRAM"}, "c": {"version": "default", "command": "gcc CODE_FILES -g -w -lm -o OUTPUT_PROGRAM"}, "clang": {"version": "default", "command": "clang CODE_FILES -g -w -lm -o OUTPUT_PROGRAM"}, "c++": {"version": "default", "command": "g++ CODE_FILES -g -w -lm -std=c++14 -o OUTPUT_PROGRAM"}}, "random": {"run_times": 0, "compile_command": "gcc SOURCE -w -std=c++14 -o random"}, "limits": {"time": 1000, "memory": 32}, "exec_flag": "--gtest_output=xml:/tmp/Result.xml", "grading": {"standard tests": 70, "google tests": 0, "compile check": 10, "google tests detail": {}, "random tests": 0, "memory check": 0, "static check": 20}, "standard": {"hidden_support": [], "support": [], "standard_input": ["standard_input0"], "random_source": [], "standard_output": ["standard_output0"]}, "entry_point": "standard_main.exe", "google tests info": {}, "language": ["c++"]}}