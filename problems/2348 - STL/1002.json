{"files": {"support": {"framework.cpp": "#include <iostream>\n#include <string>\n#include \"source.h\"\n\nusing namespace std;\n\nint main()\n{\t\n\tint size = 50;\n\tint a[50] = {41,467,334,500,169,724,478,358,962,464\n\t\t,705,145,281,827,961,491,995,942,827,436\n\t\t,391,604,902,153,292,382,421,716,718,895\n\t\t,447,726,771,538,869,912,667,299,35,894\n\t\t,703,811,322,333,673,664,141,711,253,868\n\t};\n\n\tdouble b[50] ={0.00125126,0.563585,0.193304,0.80874,0.585009,0.479873,0.350291,0.895962\n\t\t,0.82284,0.746605,0.174108,0.858943,0.710501,0.513535,0.303995,0.0149846\n\t\t,0.0914029,0.364452,0.147313,0.165899,0.988525,0.445692,0.119083,0.00466933\n\t\t,0.0089114,0.37788,0.531663,0.571184,0.601764,0.607166,0.166234,0.663045\n\t\t,0.450789,0.352123,0.0570391,0.607685,0.783319,0.802606,0.519883,0.30195\n\t\t,0.875973,0.726676,0.955901,0.925718,0.539354,0.142338,0.462081,0.235328\n\t\t,0.862239,0.209601\n\t};\n\n\tstring s[50] = {\"yngxwcjd\",\"asdfewr\",\"n\",\"hafnwtkg\",\"tut\",\n\t\t\"fnkiocrx\",\"b\",\"fsvqwt\",\"kqawfklsa\",\"sofhq\",\n\t\t\"yjwmqrcjp\",\"jrpqq\",\"emeovaky\",\"cui\",\"loaf\",\n\t\t\"yvtya\",\"f\",\"tiowrdext\",\"axa\",\"ihhpabpbh\",\n\t\t\"nqkmkxin\",\"xuiiito\",\"asdfewr\",\"aukxh\",\"q\",\n\t\t\"xbrireb\",\"fpb\",\"uvlivuxg\",\"ywalgty\",\"lu\",\n\t\t\"nxkomynh\",\"kmpkk\",\"blauagqlk\",\"jxyiav\",\"tkheyco\",\n\t\t\"slpnkl\",\"x\",\"nypxeqxl\",\"lfsi\",\"vi\",\n\t\t\"lamldqflc\",\"panj\",\"dlklcnvu\",\"ht\",\"vqwwllhw\",\n\t\t\"xgrcv\",\"oyryeoej\",\"fisoo\",\"mujhx\",\"asdfewr\"\n\t};\n\n\t/* int array */\n\tSortableArray<int> intArr(size);\n\tfor(int i = 0; i < size; i++)\n\t{\n\t\tintArr.pushBack(a[i]);\n\t}\n\tintArr.sort();\n\tintArr.printArray();\n\n\t/* double array */\n\tSortableArray<double> doubleArr(size);\n\tfor(int i = 0; i < size; i++)\n\t{\n\t\tdoubleArr.pushBack(b[i]);\n\t}\n\tdoubleArr.sort();\n\tdoubleArr.printArray();\n\n\t/* string array */\n\tSortableArray<string> strArr(size);\n\tfor(int i = 0; i < size; i++)\n\t{\n\t\tstrArr.pushBack(s[i]);\n\t}\n\tstrArr.sort();\n\tstrArr.printArray();\n\treturn 0;\n\n}"}, "standard_output": {"standard_output0": "35 41 141 145 153 169 253 281 292 299 322 333 334 358 382 391 421 436 447 464 467 478 491 500 538 604 664 667 673 703 705 711 716 718 724 726 771 811 827 827 868 869 894 895 902 912 942 961 962 995 \n0.00125126 0.00466933 0.0089114 0.0149846 0.0570391 0.0914029 0.119083 0.142338 0.147313 0.165899 0.166234 0.174108 0.193304 0.209601 0.235328 0.30195 0.303995 0.350291 0.352123 0.364452 0.37788 0.445692 0.450789 0.462081 0.479873 0.513535 0.519883 0.531663 0.539354 0.563585 0.571184 0.585009 0.601764 0.607166 0.607685 0.663045 0.710501 0.726676 0.746605 0.783319 0.802606 0.80874 0.82284 0.858943 0.862239 0.875973 0.895962 0.925718 0.955901 0.988525 \nasdfewr asdfewr asdfewr aukxh axa b blauagqlk cui dlklcnvu emeovaky f fisoo fnkiocrx fpb fsvqwt hafnwtkg ht ihhpabpbh jrpqq jxyiav kmpkk kqawfklsa lamldqflc lfsi loaf lu mujhx n nqkmkxin nxkomynh nypxeqxl oyryeoej panj q slpnkl sofhq tiowrdext tkheyco tut uvlivuxg vi vqwwllhw x xbrireb xgrcv xuiiito yjwmqrcjp yngxwcjd yvtya ywalgty \n"}, "random_source": {}, "standard_input": {"standard_input0": "35 41 141 145 153 169 253 281 292 299 322 333 334 358 382 391 421 436 447 464 467 478 491 500 538 604 664 667 673 703 705 711 716 718 724 726 771 811 827 827 868 869 894 895 902 912 942 961 962 995 \n0.00125126 0.00466933 0.0089114 0.0149846 0.0570391 0.0914029 0.119083 0.142338 0.147313 0.165899 0.166234 0.174108 0.193304 0.209601 0.235328 0.30195 0.303995 0.350291 0.352123 0.364452 0.37788 0.445692 0.450789 0.462081 0.479873 0.513535 0.519883 0.531663 0.539354 0.563585 0.571184 0.585009 0.601764 0.607166 0.607685 0.663045 0.710501 0.726676 0.746605 0.783319 0.802606 0.80874 0.82284 0.858943 0.862239 0.875973 0.895962 0.925718 0.955901 0.988525 \nasdfewr asdfewr asdfewr aukxh axa b blauagqlk cui dlklcnvu emeovaky f fisoo fnkiocrx fpb fsvqwt hafnwtkg ht ihhpabpbh jrpqq jxyiav kmpkk kqawfklsa lamldqflc lfsi loaf lu mujhx n nqkmkxin nxkomynh nypxeqxl oyryeoej panj q slpnkl sofhq tiowrdext tkheyco tut uvlivuxg vi vqwwllhw x xbrireb xgrcv xuiiito yjwmqrcjp yngxwcjd yvtya ywalgty \n"}, "submission": {"source.h": "#include<iostream>\n#include<string>\n#include<algorithm>\n#include<vector>\nusing namespace std;\n\ntemplate<typename T>\nclass SortableArray {\n\tprivate:\n\t\tvector<T> array;\n\t\tint maxSize;\n\tpublic:\n\t\tSortableArray (int);\n\t\tvoid pushBack (T);\n\t\tvoid sort (void);\n\t\tvoid printArray (void);\n};\n\ntemplate<typename T>\nSortableArray<T>::SortableArray (int m) {\n\tmaxSize = m;\n}\n\ntemplate<typename T>\nvoid SortableArray<T>::pushBack (T a) {\n\tarray.push_back(a);\n}\n\ntemplate<typename T>\nvoid SortableArray<T>::sort () {\n\tint n = array.size(), i, j;\n\tT temp;\n\tfor (i = 0; i < n - 1; i++) {\n\t\tfor (j = n - 1; j > i; j--) {\n\t\t\tif (array[j] <= array[j - 1]) {\n\t\t\t\ttemp = array[j];\n\t\t\t\tarray[j] = array[j - 1];\n\t\t\t\tarray[j - 1] = temp;\n\t\t\t}\n\t\t}\n\t}\n}\n\ntemplate<typename T>\nvoid SortableArray<T>::printArray () {\n\ttypename vector<T>::iterator i;\n\tfor (i = array.begin(); i != array.end(); i++) {\n\t\tif (i + 1 != array.end()) {\n\t\t\tcout<<(*i)<<\" \";\n\t\t} else {\n\t\t\tcout<<(*i)<<\" \"<<endl;\n\t\t}\n\t}\n}\n\n"}, "hidden_support": {}}, "description": "# \u53ef\u6392\u5e8f\u6570\u7ec4\n\n# Description\n<p>\u53ef\u6392\u5e8f\u6570\u7ec4 SortableArray\u5b9a\u4e49\u5982\u4e0b\uff1a</p>\r\n<p>1. \u53ef\u901a\u8fc7\u6210\u5458\u51fd\u6570pushBack\u63d2\u5165\u4e00\u4e2a\u5143\u7d20</p>\r\n<p>2.\u53ef\u901a\u8fc7\u6210\u5458\u51fd\u6570sort\u5bf9\u6570\u7ec4\u8fdb\u884c\u5347\u5e8f\u6392\u5e8f</p>\r\n<p>3.\u53ef\u901a\u8fc7\u6210\u5458\u51fdprintArray\u6570\u8f93\u51fa\u6570\u7ec4</p>\r\n<p>4.\u53ef\u6392\u5e8f\u6570\u7ec4SortableArray\u662f\u4e00\u4e2a\u6a21\u677f\u7c7b</p>\r\n<p>5.SortableArray\u7684\u5b9e\u4f8b\uff1aSortableArray&lt;int&gt; array( maxArraySize ) ;</p>\r\n<p>\uff08\u8bf7\u5b9e\u73b0SortableArray\uff0c\u6ce8\u610f\u5728\u63d0\u4ea4\u7684\u4ee3\u7801\u4e2d\u8bf7\u4e0d\u8981\u5305\u542b main()\u51fd\u6570 \uff09</p>\n\n# Input\n<p>\u6d4b\u8bd5\u6846\u67b6\u5982\u4e0b\uff1a</p>\r\n<p>int maxSize = 10 ;</p>\r\n<p>SortableArray&lt; int &gt; arr( maxSize ) ;</p>\r\n<p>arr.pushBack( 45 )&nbsp;;</p>\r\n<p>arr.pushBack( 32 )&nbsp;;</p>\r\n<p>arr.pushBack( 41 )&nbsp;;</p>\r\n<p>arr.printArray()&nbsp;;</p>\r\n<p>arr.sort() ;</p>\r\n<p>arr.printfArray() ;</p>\n\n# Output\n<p>45 32 41</p>\r\n<p>32 41 45</p>\n\n# Sample_Input\n```\n\n```\n\n# Sample_Ouput\n```\n\n```\n\n# Hint\n\n\n", "ptype_id": 0, "title": "From Sicily::2348 - STL::1002::\u53ef\u6392\u5e8f\u6570\u7ec4", "config": {"random": {"run_times": 0, "compile_command": "gcc SOURCE -w -std=c++14 -o random"}, "standard_score": 100, "exec_flag": "--gtest_output=xml:/tmp/Result.xml", "language": ["c++"], "limits": {"time": 1000, "memory": 32}, "standard": {"support": ["framework.cpp"], "random_source": [], "standard_input": ["standard_input0"], "standard_output": ["standard_output0"], "hidden_support": []}, "compilers": {"c++": {"command": "g++ framework.cpp -g -w -lm -std=c++14 -o OUTPUT_PROGRAM", "version": "default"}, "clang++": {"command": "clang++ framework.cpp -g -w -lm -std=c++11 -o OUTPUT_PROGRAM", "version": "default"}, "clang": {"command": "clang framework.cpp -g -w -lm -o OUTPUT_PROGRAM", "version": "default"}, "c": {"command": "gcc framework.cpp -g -w -lm -o OUTPUT_PROGRAM", "version": "default"}}, "standard_language": "c++", "grading": {"static check": 20, "google tests detail": {}, "memory check": 0, "standard tests": 70, "google tests": 0, "random tests": 0, "compile check": 10}, "google tests info": {}, "entry_point": "standard_main.exe", "output_program": "main.exe", "submission": ["source.h"]}}