{"config": {"google tests info": {}, "standard_score": 100, "output_program": "main.exe", "exec_flag": "--gtest_output=xml:/tmp/Result.xml", "random": {"run_times": 0, "compile_command": "gcc SOURCE -w -std=c++14 -o random"}, "standard": {"standard_input": ["standard_input0"], "random_source": [], "standard_output": ["standard_output0"], "hidden_support": [], "support": []}, "standard_language": "c++", "submission": ["source.cpp"], "compilers": {"c++": {"version": "default", "command": "g++ CODE_FILES -g -w -lm -std=c++14 -o OUTPUT_PROGRAM"}, "c": {"version": "default", "command": "gcc CODE_FILES -g -w -lm -o OUTPUT_PROGRAM"}, "clang++": {"version": "default", "command": "clang++ CODE_FILES -g -w -lm -std=c++11 -o OUTPUT_PROGRAM"}, "clang": {"version": "default", "command": "clang CODE_FILES -g -w -lm -o OUTPUT_PROGRAM"}}, "grading": {"standard tests": 70, "google tests detail": {}, "memory check": 0, "google tests": 0, "random tests": 0, "compile check": 10, "static check": 20}, "language": ["c++"], "limits": {"time": 1000, "memory": 32}, "entry_point": "standard_main.exe"}, "ptype_id": 0, "files": {"standard_input": {"standard_input0": ""}, "submission": {"source.cpp": "#include <iostream>\nusing namespace std;\nclass A {\n\tpublic:\n\t\tvirtual ~A() {\n\t\t\tcout << \"A::~A()called\" << endl;\n\t\t}\n\t\tvirtual void Prin() {\n\t\t\tcout << \"Prin come form class A\" << endl;\n\t\t}\n};\n\nclass B: public A {\n\t\tchar *buf;\n\tpublic:\n\t\tB(int) {\n\t\t};\n\t\tvirtual ~B() {\n\t\t\tcout << \"B::~B()called\" << endl;\n\t\t}\n\t\tvirtual void Prin() {\n\t\t\tcout<<\"Prin come from class B\"<<endl;\n\t\t}\n};\n\nvoid fun(A *a) {\n\tdelete a;\n}\nint main() {\n\tA *a = new B(10);\n\ta->Prin();\n\tfun(a);\n\tB *b =  new B(20);\n\tfun(b);\n\treturn 0;\n}\n\n"}, "hidden_support": {}, "random_source": {}, "standard_output": {"standard_output0": "Prin come from class B\nB::~B()called\nA::~A()called\nB::~B()called\nA::~A()called\n"}, "support": {}}, "description": "# Destructor\n\n# Description\n<p>&nbsp;<span style=\"color: rgb(51, 51, 51); font-family: Arial; font-size: 16px; line-height: 20px;\">\u4e0b\u9762\u662f\u4e0d\u5b8c\u6574\u7684\u7ee7\u627f\u7c7b\u5b9a\u4e49:</span></p>\r\n<div><span style=\"color: rgb(51, 51, 51); font-family: Arial; font-size: 16px; line-height: 20px;\">class A</span></div>\r\n<div><span style=\"color: rgb(51, 51, 51); font-family: Arial; font-size: 16px; line-height: 20px;\">{</span></div>\r\n<div>public:</div>\r\n<div>\r\n<div><span class=\"Apple-tab-span\" style=\"white-space:pre\">\t</span>virtual void Prin()</div>\r\n<div><span class=\"Apple-tab-span\" style=\"white-space:pre\">\t</span>{</div>\r\n<div><span class=\"Apple-tab-span\" style=\"white-space:pre\">\t\t</span>cout&lt;&lt;&quot;Prin come form class A&quot;&lt;&lt;endl;</div>\r\n<div><span class=\"Apple-tab-span\" style=\"white-space:pre\">\t</span>}</div>\r\n</div>\r\n<div><span style=\"color: rgb(51, 51, 51); font-family: Arial; font-size: 16px; line-height: 20px;\">};</span></div>\r\n<div><span style=\"color: rgb(51, 51, 51); font-family: Arial; font-size: 16px; line-height: 20px;\">class B</span></div>\r\n<div><span style=\"color: rgb(51, 51, 51); font-family: Arial; font-size: 16px; line-height: 20px;\">{</span></div>\r\n<div><span style=\"color: rgb(51, 51, 51); font-family: Arial; font-size: 16px; line-height: 20px;\">&nbsp; &nbsp;char *buf;</span></div>\r\n<div>public:</div>\r\n<div>&nbsp; &nbsp;&nbsp;<span class=\"Apple-tab-span\" style=\"white-space: pre;\">\t</span>void Prin()</div>\r\n<div><span class=\"Apple-tab-span\" style=\"white-space:pre\">\t</span>{</div>\r\n<div><span class=\"Apple-tab-span\" style=\"white-space:pre\">\t\t</span>cout&lt;&lt;&quot;Prin come from class B&quot;&lt;&lt;endl;</div>\r\n<div><span class=\"Apple-tab-span\" style=\"white-space:pre\">\t</span>}</div>\r\n<div><span style=\"color: rgb(51, 51, 51); font-family: Arial; font-size: 16px; line-height: 20px;\">};</span></div>\r\n<div>\r\n<div style=\"color: rgb(51, 51, 51); font-family: Arial; line-height: 20px;\">&nbsp;</div>\r\n</div>\r\n<div><span style=\"color: rgb(51, 51, 51); font-family: Arial; font-size: 16px; line-height: 20px;\">\u8bd5\u5b8c\u6210\u5176\u5b9a\u4e49(\u4f60\u53ef\u4ee5\u6839\u636e\u9700\u8981\u589e\u52a0\u5fc5\u8981\u7684\u6784\u9020\u51fd\u6570\u3001\u6790\u6784\u51fd\u6570 ),\u4f7f\u5f97\u4e3b\u51fd\u6570main\u8fd0\u884c\u540e\u80fd\u5f97\u5230\u5176\u540e\u7ed3\u679c\uff1a</span></div>\r\n<div>\r\n<div style=\"color: rgb(51, 51, 51); font-family: Arial; line-height: 20px;\">void fun(A *a)</div>\r\n<div style=\"color: rgb(51, 51, 51); font-family: Arial; line-height: 20px;\">{</div>\r\n<div style=\"color: rgb(51, 51, 51); font-family: Arial; line-height: 20px;\"><span class=\"Apple-tab-span\" style=\"white-space: pre;\">\t</span>delete a;</div>\r\n<div style=\"color: rgb(51, 51, 51); font-family: Arial; line-height: 20px;\">}</div>\r\n</div>\r\n<div><font face=\"Arial\" color=\"#333333\">\r\n<div style=\"line-height: 20px;\">\r\n<div>int main()</div>\r\n<div>{</div>\r\n<div><span class=\"Apple-tab-span\" style=\"white-space:pre\">\t</span>A *a = new B(10);</div>\r\n<div><span class=\"Apple-tab-span\" style=\"white-space:pre\">\t</span>a-&gt;Prin();</div>\r\n<div><span class=\"Apple-tab-span\" style=\"white-space:pre\">\t</span>fun(a);</div>\r\n<div><span class=\"Apple-tab-span\" style=\"white-space:pre\">\t</span>B *b = &nbsp;new B(20);</div>\r\n<div><span class=\"Apple-tab-span\" style=\"white-space:pre\">\t</span>fun(b);</div>\r\n<div><span class=\"Apple-tab-span\" style=\"white-space:pre\">\t</span>return 0;</div>\r\n<div>}</div>\r\n</div>\r\n<div style=\"line-height: 20px;\">\u8fd0\u884c\u7ed3\u679c\uff1a</div>\r\n<div>&nbsp;</div>\r\n</font>Prin come from class B</div>\r\n<div>B::~B()called</div>\r\n<div>A::~A()called</div>\r\n<div>B::~B()called</div>\r\n<div>A::~A()called</div>\r\n<div><font face=\"Arial\" color=\"#333333\">\r\n<div>&nbsp;</div>\r\n<div>&nbsp;</div>\r\n<div><span style=\"line-height: 20px;\"><br />\r\n</span></div>\r\n</font></div>\n\n# Input\n<p>&nbsp;none</p>\n\n# Output\n<p>&nbsp;none</p>\n\n# Sample_Input\n```\n\n```\n\n# Sample_Ouput\n```\n\n```\n\n# Hint\n<p>virtual destructor!</p>\r\n<p>only need to submit class A, B and main()</p>\n\n", "title": "From Sicily::2310 - Inheritance(cont2)::1002::Destructor"}