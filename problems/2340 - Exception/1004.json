{"title": "From Sicily::2340 - Exception::1004::\u7b80\u5355\u51cf\u6cd5", "description": "# \u7b80\u5355\u51cf\u6cd5\n\n# Description\n<p>\u67d0\u5c0f\u670b\u53cb\u5df2\u7ecf\u56db\u5c81\u4e86\uff0c\u5979\u5f00\u59cb\u5b66\u4e60\u6570\u5b57\u51cf\u6cd5\uff0c\u4f46\u5979\u8fd8\u4e0d\u7406\u89e3\u8d1f\u6570\u7684\u6982\u5ff5\uff0c\u5982\u679c\u88ab\u51cf\u6570\u548c\u51cf\u6570\u4e2d\u51fa\u73b0\u8d1f\u6570\uff0c\u6216\u8005\u88ab\u51cf\u6570\u5c0f\u4e8e\u51cf\u6570\uff0c\u5979\u90fd\u4e0d\u4f1a\u7b97\u3002<br />\r\n\u51fd\u6570calc\u505a\u51cf\u6cd5\u8ba1\u7b97\u524d\u8fdb\u884c\u4e86\u68c0\u67e5\u3002<br />\r\nint calc(int a, int b) throw(logic_error)<br />\r\n{<br />\r\n&nbsp; if (a&lt;0) throw out_of_range(&quot;Out of range exeception&quot;);<br />\r\n&nbsp; else if (b&lt;0) throw out_of_range(&quot;Out of range exeception&quot;);<br />\r\n&nbsp; else if (a&lt;b) throw logic_error(&quot;Minuend smaller than subtrahend&quot;);<br />\r\n&nbsp; return a-b;<br />\r\n}<br />\r\n\u8bf7\u5199\u4e00\u4e2atest\u51fd\u6570<br />\r\nvoid test(int, int)<br />\r\n\u4f7f\u5f97\u4ee5\u4e0b\u51fd\u6570f<br />\r\nvoid f()<br />\r\n{</p>\r\n<p>&nbsp; test(3, 1);<br />\r\n&nbsp; test(-3,1);<br />\r\n&nbsp; test(1,-3);<br />\r\n&nbsp; test(1,3);<br />\r\n}<br />\r\n\u8f93\u51fa\u5982\u4e0b\uff1a</p>\r\n<p>2<br />\r\nOut of range exeception<br />\r\nOut of range exeception<br />\r\nMinuend smaller than subtrahend</p>\r\n<p>\u8bf7\u53ea\u63d0\u4ea4test\u51fd\u6570\uff0c\u4e0d\u8981\u63d0\u4ea4calc\u51fd\u6570\u3002</p>\n\n# Input\n\n\n# Output\n\n\n# Sample_Input\n```\n\n```\n\n# Sample_Ouput\n```\n\n```\n\n# Hint\n\n\n", "ptype_id": 0, "files": {"hidden_support": {}, "support": {"framework.cpp": "#include <iostream>\n#include <stdexcept>\nusing namespace std;\n\nint calc(int a, int b)\n{\n  if (a<0) throw out_of_range(\"Out of range exeception\");\n  else if (b<0) throw out_of_range(\"Out of range exeception\");\n  else if (a<b) throw logic_error(\"Minuend smaller than subtrahend\");\n  return a-b;\n}\n\n#include \"source.h\"\n\n\nint main()\n{\n  \n  test(3,1);\n  test(-3,1);\n  test(1,-3);\n  test(1,3);\n  return 0;\n}\n"}, "standard_output": {"standard_output0": "2\nOut of range exeception\nOut of range exeception\nMinuend smaller than subtrahend\n"}, "submission": {"source.h": "void test(int a, int b) {\n    try {\n        cout << calc(a, b) << endl;\n    }\n    catch (out_of_range e){\n        cout << e.what() << endl;\n    }\n    catch (logic_error e) {\n        cout << e.what() << endl;\n    }\n}                                 \n\n"}, "random_source": {}, "standard_input": {"standard_input0": ""}}, "config": {"google tests info": {}, "standard_score": 100, "random": {"compile_command": "gcc SOURCE -w -std=c++14 -o random", "run_times": 0}, "standard_language": "c++", "standard": {"hidden_support": [], "standard_output": ["standard_output0"], "random_source": [], "standard_input": ["standard_input0"], "support": ["framework.cpp"]}, "grading": {"memory check": 0, "google tests detail": {}, "random tests": 0, "standard tests": 70, "google tests": 0, "static check": 20, "compile check": 10}, "exec_flag": "--gtest_output=xml:/tmp/Result.xml", "limits": {"time": 1000, "memory": 32}, "output_program": "main.exe", "language": ["c++"], "submission": ["source.h"], "compilers": {"clang++": {"version": "default", "command": "clang++ framework.cpp -g -w -lm -std=c++11 -o OUTPUT_PROGRAM"}, "c": {"version": "default", "command": "gcc framework.cpp -g -w -lm -o OUTPUT_PROGRAM"}, "c++": {"version": "default", "command": "g++ framework.cpp -g -w -lm -std=c++14 -o OUTPUT_PROGRAM"}, "clang": {"version": "default", "command": "clang framework.cpp -g -w -lm -o OUTPUT_PROGRAM"}}, "entry_point": "standard_main.exe"}}