{"config": {"google tests info": {}, "language": ["c++"], "standard_score": 100, "standard": {"standard_input": ["standard_input0"], "standard_output": ["standard_output0"], "hidden_support": [], "random_source": [], "support": ["framework.cpp"]}, "standard_language": "c++", "limits": {"memory": 32, "time": 1000}, "submission": ["source.h"], "random": {"compile_command": "gcc SOURCE -w -std=c++14 -o random", "run_times": 0}, "exec_flag": "--gtest_output=xml:/tmp/Result.xml", "grading": {"google tests detail": {}, "memory check": 0, "google tests": 0, "standard tests": 70, "compile check": 10, "random tests": 0, "static check": 20}, "compilers": {"clang++": {"command": "clang++ framework.cpp -g -w -lm -std=c++11 -o OUTPUT_PROGRAM", "version": "default"}, "clang": {"command": "clang framework.cpp -g -w -lm -o OUTPUT_PROGRAM", "version": "default"}, "c++": {"command": "g++ framework.cpp -g -w -lm -std=c++14 -o OUTPUT_PROGRAM", "version": "default"}, "c": {"command": "gcc framework.cpp -g -w -lm -o OUTPUT_PROGRAM", "version": "default"}}, "entry_point": "standard_main.exe", "output_program": "main.exe"}, "title": "From Sicily::2270 - operator overloading(cont)::1002::The Int class", "files": {"standard_input": {"standard_input0": "1\n"}, "support": {"framework.cpp": "#include<iostream>\n#include<string>\n#include\"source.h\"\nusing namespace std;\n\nvoid g()\n{\n  Int a=0;\n  Int b(1);\n  Int c(2.5);\n  Int d = 99.5;\n\n  cout <<  a << endl;\n  cout <<  b << endl;\n  cout << b.getI() << endl;  \n  cout <<  c << endl;\n  cout <<  d << endl;\n  \n  d += 1;\n  d += 1.5;\n  cout <<  c+d << endl;\n  cout <<  1+c << endl;\n  cout <<  c+1 << endl;\n  cout <<  1.5+c << endl;\n  cout <<  c+1.5 << endl;\n\n  cout <<  a + b + c + d << endl;\n\n  d -= 1;\n  d -= 1.5;\n  cout <<  c-d << endl;\n  cout <<  1-c << endl;\n  cout <<  c-1 << endl;\n  cout <<  1.5-c << endl;\n  cout <<  c-1.5 << endl;\n\n  d *= 1;\n  d *= 1.5;\n  cout <<  c*d << endl;\n  cout <<  9*c << endl;\n  cout <<  c*9 << endl;\n  cout <<  19.4*c << endl;\n  cout <<  c*19.4 << endl;\n  d /= 2;\n  d /= 2.5;\n  cout <<  d/c << endl;\n  cout <<  2/c << endl;\n  cout <<  c/2 << endl;\n  cout <<  2.5/c << endl;\n  cout <<  c/2.5 << endl;\n\n  cout <<  b%c << endl;\n  cout <<  5%c << endl;\n  cout <<  c%2 << endl;\n\n  cout <<  c++ << endl;\n  cout <<  ++c << endl;\n  cout <<  c-- << endl;\n  cout <<  --c << endl;    \n  cout <<  -c << endl;\n  \n  int c1 = c;\n  cout << c1 << endl;\n  c1 = c;  \n  cout << c1 << endl;  \n\n  cin >> d;\n  cout <<  d << endl;\n}\n\nint main()\n{\n  g();\n  return 0;\n}\n"}, "hidden_support": {}, "random_source": {}, "standard_output": {"standard_output0": "0\n1\n1\n2\n99\n103\n3\n3\n3.5\n3.5\n104\n-96\n-1\n1\n-0.5\n0.5\n294\n18\n18\n38.8\n38.8\n14\n1\n1\n1.25\n0.8\n1\n1\n0\n2\n4\n4\n2\n-2\n2\n2\n1\n"}, "submission": {"source.h": "#include <iostream>\n#include<cmath>\n#include<cstring>\n#include<algorithm>\n\nusing namespace std;\n\nclass Int {\n\t\tint i;\n\tpublic:\n\t\tInt() {\n\t\t}\n\t\tInt(double n): i((int)n) {}\n\t\tint getI() {\n\t\t\treturn i;\n\t\t}\n\t\tInt& operator=(double n) {\n\t\t\ti = (int)n;\n\t\t\treturn *this;\n\t\t}\n\t\toperator int() const {\n\t\t\treturn i;\n\t\t}\n\t\tfriend ostream & operator<<(ostream & os, const Int & a) {\n\t\t\tos << a.i;\n\t\t\treturn os;\n\t\t}\n\t\tfriend istream & operator>>(istream & is, Int & a) {\n\t\t\tis >> a.i;\n\t\t\treturn is;\n\t\t}\n\n\t\tInt& operator+=(double n) {\n\t\t\ti = (int)(i + n);\n\t\t\treturn *this;\n\t\t}\n\t\tInt& operator-=(double n) {\n\t\t\ti = (int) (i - n);\n\t\t\treturn *this;\n\t\t}\n\n\t\tdouble operator+(double n) {\n\t\t\tdouble a;\n\t\t\ta = i + n;\n\t\t\treturn a;\n\t\t}\n\n\t\tInt operator+(const Int& n) {\n\t\t\tInt a;\n\t\t\ta.i = i + n.i ;\n\t\t\treturn a;\n\t\t}\n\n\t\tdouble operator-(double n) {\n\t\t\tdouble a;\n\t\t\ta = i - n;\n\t\t\treturn a;\n\t\t}\n\n\t\tInt operator-(const Int& n) {\n\t\t\tInt a;\n\t\t\ta.i = i - n.i ;\n\t\t\treturn a;\n\t\t}\n\n\t\tInt operator-() {\n\t\t\tInt a;\n\t\t\ta.i  = -i;\n\t\t\treturn a;\n\t\t}\n\n\t\tInt& operator*=(double n) {\n\t\t\ti = (int) (i * n);\n\t\t\treturn *this;\n\t\t}\n\t\tdouble operator*(double n) {\n\t\t\tdouble a;\n\t\t\ta =  i * n;\n\t\t\treturn a;\n\t\t}\n\n\t\tInt operator*(const Int& n) {\n\t\t\tInt a;\n\t\t\ta.i = i * n.i ;\n\t\t\treturn a;\n\t\t}\n\n\t\tInt& operator/=(double n) {\n\t\t\ti = (int) (i / n);\n\t\t\treturn *this;\n\t\t}\n\t\tdouble operator/(double n) {\n\t\t\tdouble a;\n\t\t\ta = i / n;\n\t\t\treturn a;\n\t\t}\n\n\t\tInt operator/(const Int& n) {\n\t\t\tInt a;\n\t\t\ta.i = i / n.i ;\n\t\t\treturn a;\n\t\t}\n\n\t\tInt operator%(double n) {\n\t\t\tInt a;\n\t\t\ta.i = i % (int)n;\n\t\t\treturn a;\n\t\t}\n\t\tfriend  Int operator%(double n, const Int& b) {\n\t\t\tInt a;\n\t\t\ta.i =(int)n %  b.i;\n\t\t\treturn a;\n\t\t}\n\t\tInt operator%(const Int& n) {\n\t\t\tInt a;\n\t\t\ta.i = i % n.i ;\n\t\t\treturn a;\n\t\t}\n\n\t\tInt& operator++() {\n\t\t\ti++;\n\t\t\treturn *this;\n\t\t}\n\t\tInt& operator--() {\n\t\t\ti--;\n\t\t\treturn *this;\n\t\t}\n\t\tInt operator++(int) {\n\t\t\tInt i2 = *this;\n\t\t\ti++;\n\t\t\treturn i2;\n\t\t}\n\t\tInt operator--(int) {\n\t\t\tInt i2 = *this;\n\t\t\ti--;\n\t\t\treturn i2;\n\t\t}\n\n\t\t//add any member function needed here\n};\n\n"}}, "description": "# The Int class\n\n# Description\n<p>Implement a class Int that behaves exactly like an int.<br />\r\nclass Int<br />\r\n{<br />\r\n&nbsp; int i;<br />\r\npublic:<br />\r\n&nbsp; int getI() { return i; }<br />\r\n&nbsp; //add any member function needed here<br />\r\n};<br />\r\nFor example, the following code will has the same output when Int replace by int:<br />\r\nvoid f()<br />\r\n{<br />\r\n&nbsp; Int a=0;<br />\r\n&nbsp; Int b(1);<br />\r\n&nbsp; Int c(2.5);<br />\r\n&nbsp; Int d = 99.5;<br />\r\n<br />\r\n&nbsp; cout &lt;&lt;&nbsp; a &lt;&lt; endl;<br />\r\n&nbsp; cout &lt;&lt;&nbsp; b &lt;&lt; endl;<br />\r\n&nbsp; cout &lt;&lt;&nbsp; c &lt;&lt; endl;<br />\r\n&nbsp; cout &lt;&lt;&nbsp; d &lt;&lt; endl;<br />\r\n&nbsp; <br />\r\n&nbsp; d += 1;<br />\r\n&nbsp; d += 1.5;<br />\r\n&nbsp; cout &lt;&lt;&nbsp; c+d &lt;&lt; endl;<br />\r\n&nbsp; cout &lt;&lt;&nbsp; 1+c &lt;&lt; endl;<br />\r\n&nbsp; cout &lt;&lt;&nbsp; c+1 &lt;&lt; endl;<br />\r\n&nbsp; cout &lt;&lt;&nbsp; 1.5+c &lt;&lt; endl;<br />\r\n&nbsp; cout &lt;&lt;&nbsp; c+1.5 &lt;&lt; endl;<br />\r\n<br />\r\n&nbsp; cout &lt;&lt;&nbsp; a + b + c + d &lt;&lt; endl;<br />\r\n<br />\r\n&nbsp; d -= 1;<br />\r\n&nbsp; d -= 1.5;<br />\r\n&nbsp; cout &lt;&lt;&nbsp; c-d &lt;&lt; endl;<br />\r\n&nbsp; cout &lt;&lt;&nbsp; 1-c &lt;&lt; endl;<br />\r\n&nbsp; cout &lt;&lt;&nbsp; c-1 &lt;&lt; endl;<br />\r\n&nbsp; cout &lt;&lt;&nbsp; 1.5-c &lt;&lt; endl;<br />\r\n&nbsp; cout &lt;&lt;&nbsp; c-1.5 &lt;&lt; endl;<br />\r\n<br />\r\n&nbsp; d *= 1;<br />\r\n&nbsp; d *= 1.5;<br />\r\n&nbsp; cout &lt;&lt;&nbsp; c*d &lt;&lt; endl;<br />\r\n&nbsp; cout &lt;&lt;&nbsp; 9*c &lt;&lt; endl;<br />\r\n&nbsp; cout &lt;&lt;&nbsp; c*9 &lt;&lt; endl;<br />\r\n&nbsp; cout &lt;&lt;&nbsp; 19.4*c &lt;&lt; endl;<br />\r\n&nbsp; cout &lt;&lt;&nbsp; c*19.4 &lt;&lt; endl;<br />\r\n&nbsp; d /= 2;<br />\r\n&nbsp; d /= 2.5;<br />\r\n&nbsp; cout &lt;&lt;&nbsp; d/c &lt;&lt; endl;<br />\r\n&nbsp; cout &lt;&lt;&nbsp; 2/c &lt;&lt; endl;<br />\r\n&nbsp; cout &lt;&lt;&nbsp; c/2 &lt;&lt; endl;<br />\r\n&nbsp; cout &lt;&lt;&nbsp; 2.5/c &lt;&lt; endl;<br />\r\n&nbsp; cout &lt;&lt;&nbsp; c/2.5 &lt;&lt; endl;<br />\r\n<br />\r\n&nbsp; cout &lt;&lt;&nbsp; b%c &lt;&lt; endl;<br />\r\n&nbsp; cout &lt;&lt;&nbsp; 5%c &lt;&lt; endl;<br />\r\n&nbsp; cout &lt;&lt;&nbsp; c%2 &lt;&lt; endl;<br />\r\n<br />\r\n&nbsp; cout &lt;&lt;&nbsp; c++ &lt;&lt; endl;<br />\r\n&nbsp; cout &lt;&lt;&nbsp; ++c &lt;&lt; endl;<br />\r\n&nbsp; cout &lt;&lt;&nbsp; c-- &lt;&lt; endl;<br />\r\n&nbsp; cout &lt;&lt;&nbsp; --c &lt;&lt; endl;&nbsp;&nbsp;&nbsp; <br />\r\n&nbsp; cout &lt;&lt;&nbsp; -c &lt;&lt; endl;<br />\r\n&nbsp; <br />\r\n&nbsp; int c1 = c;<br />\r\n&nbsp; cout &lt;&lt; c1 &lt;&lt; endl;<br />\r\n&nbsp; c1 = c;&nbsp; <br />\r\n&nbsp; cout &lt;&lt; c1 &lt;&lt; endl;&nbsp; <br />\r\n<br />\r\n&nbsp; cin &gt;&gt; d;<br />\r\n&nbsp; cout &lt;&lt;&nbsp; d &lt;&lt; endl;<br />\r\n}</p>\n\n# Input\n\n\n# Output\n\n\n# Sample_Input\n```\n\n```\n\n# Sample_Ouput\n```\n\n```\n\n# Hint\n\n\n", "ptype_id": 0}