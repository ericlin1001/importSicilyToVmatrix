{"title": "From Sicily::2297 - Inheritance(cont)::1002::Multiple-inheritance", "description": "# Description\n<div>&nbsp;</div>\r\n<div style=\"text-indent: 21pt\"><font size=\"3\">Below&nbsp;are two classes A and C: </font></div>\r\n<div>&nbsp;</div>\r\n<div><span style=\"color: #0000ff\"><font size=\"3\">class A<br />\r\n{<br />\r\npublic:<br />\r\n&nbsp;&nbsp;&nbsp; A(int a0):a(a0) {}<br />\r\n&nbsp;&nbsp;&nbsp; void showA() { cout&lt;&lt;a&lt;&lt;endl; }<br />\r\nprotected:<br />\r\n&nbsp;&nbsp;&nbsp; int a;<br />\r\n}; </font></span></div>\r\n<div>&nbsp;</div>\r\n<div><span style=\"color: #0000ff\"><font size=\"3\">class C<br />\r\n{<br />\r\npublic:<br />\r\n&nbsp;&nbsp;&nbsp; C(int c0):c(c0) {}<br />\r\n&nbsp;&nbsp;&nbsp; void showC() { cout&lt;&lt;c&lt;&lt;endl; }<br />\r\nprotected:<br />\r\n&nbsp;&nbsp;&nbsp; int c;<br />\r\n};<br />\r\n</font></span></div>\r\n<div>&nbsp;</div>\r\n<div style=\"text-indent: 21pt\"><font size=\"3\">You are required to derive a class B f<font color=\"#000000\">rom both A and C. The B class has only one constructor, which has two parameters of&nbsp;the type int,&nbsp;with&nbsp;the first one for&nbsp;<span style=\"color: #0000ff\">a</span> and the second for <span style=\"color: #0000ff\">c</span>.&nbsp;The default values for the two parameters are 11 and 22 respectively.</font></font></div>\r\n<div>&nbsp;</div>\r\n<div style=\"text-indent: 21pt\"><font size=\"3\">Your submitted&nbsp;source code should&nbsp;include the whole&nbsp;implementation of the B<font color=\"#000000\"> </font>class, but without&nbsp;the&nbsp;A and&nbsp;C&nbsp;classes.</font></div>\r\n<div style=\"text-indent: 21pt\"><font size=\"3\">No main() function should be included.</font></div>\r\n<div>&nbsp;</div>\n# Input\n\n# Output\n\n# Sample_Input\n```\n\n```\n# Sample_Ouput\n```\n\n```\n# Hint\n\n", "ptype_id": 0, "config": {"limits": {"memory": 32, "time": 1000}, "standard_language": "c++", "grading": {"memory check": 0, "static check": 20, "compile check": 10, "google tests detail": {}, "standard tests": 70, "google tests": 0, "random tests": 0}, "standard_score": 100, "language": ["c++"], "compilers": {"c++": {"command": "g++ framework.cpp -g -w -lm -std=c++14 -o OUTPUT_PROGRAM", "version": "default"}, "c": {"command": "gcc framework.cpp -g -w -lm -o OUTPUT_PROGRAM", "version": "default"}, "clang++": {"command": "clang++ framework.cpp -g -w -lm -std=c++11 -o OUTPUT_PROGRAM", "version": "default"}, "clang": {"command": "clang framework.cpp -g -w -lm -o OUTPUT_PROGRAM", "version": "default"}}, "output_program": "main.exe", "random": {"compile_command": "gcc SOURCE -w -std=c++14 -o random", "run_times": 0}, "standard": {"random_source": [], "standard_input": ["standard_input0"], "support": ["framework.cpp"], "hidden_support": [], "standard_output": ["standard_output0"]}, "entry_point": "standard_main.exe", "submission": ["source.h"], "google tests info": {}, "exec_flag": "--gtest_output=xml:/tmp/Result.xml"}, "files": {"standard_input": {"standard_input0": ""}, "support": {"framework.cpp": "#include <iostream>\n#include <string>\n#include <vector>\nusing namespace std;\n\n\nclass A\n{\npublic:\n\tA(int a0):a(a0) {}\n\tvoid showA() { cout<<a<<endl; }\nprotected:\n\tint a;\n};\n\nclass C\n{\npublic:\n\tC(int c0):c(c0) {}\n\tvoid showC() { cout<<c<<endl; }\nprotected:\n\tint c;\n};\n\n#include \"source.h\"\n\nint main()\n{\n//\tfreopen(\"test01.in\", \"r\", stdin);\n//\tfreopen(\"test01.out\", \"w\", stdout);\n\t{\n\t\tB b;\n\t\tb.showA();\n\t\tb.showC();\n\t}\n\t{\n\t\tB b(33);\n\t\tb.showA();\n\t\tb.showC();\n\t}\n\t{\n\t\tB b(33,44);\n\t\tb.showA();\n\t\tb.showC();\n\t}\n\n    return 0;\n}"}, "hidden_support": {}, "standard_output": {"standard_output0": "11\n22\n33\n22\n33\n44\n"}, "submission": {"source.h": "class B: public A, public C {\n    public:\n        B(int x = 11 , int y = 22): A(x), C(y) {};\n};                                 \n\n"}, "random_source": {}}}